@page "/settings"
@using System.ComponentModel.DataAnnotations

@implements IDisposable;

<style>
    #main-page {
        overflow-x: hidden;
        background: linear-gradient(-141deg, #EEF5F7 14%, #EEF2FB 100%);
    }

    .content.container-fluid {
        height: 100vh;
        overflow-y: auto;
        overflow-x: hidden;
    }

    @@media (min-width: 1100px) {
        .rightpane {
            margin-right: 270px;
        }
    }

    @@media (max-width: 1100px) {
        .rightpane {
            margin-right: 0px;
        }
    }

    @@media (min-width: 768px) {
        .content .content-wrapper {
            padding: 0;
        }
    }

    @@media (max-width: 768px) {
        .content .content-wrapper {
            padding: 0 8px 8px 8px;
            margin-top: 7rem;
        }
    }

    .content.container-fluid {
        height: 100vh;
        overflow-y: auto;
        overflow-x: hidden;
    }
</style>

<div class="expense-page content">
    <div class='exp-content-container'>

        <div class="settings-container">
            <div class="col-xs-12 col-sm-6 col-lg-3 col-md-6 margin-top settings-tb-container pane">
                @*<div>
                        <p class="chart-title chart-subtitle">Test settings</p>
                    </div>
                    <div class="cb-container">
                        <StrategiesDropDownList />
                    </div>
                    <div class="cb-container">
                        <SymbolsDropDownList />
                    </div>
                    <div class="cb-container">
                        <IntervalDropDownList />
                    </div>
                    <div class="tb-container">
                        <SfTextBox Placeholder="History range" @bind-Value="@Value" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>

                    </div>
                    <div class="tb-container">
                        <SfTextBox Placeholder="Start balance" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    </div>
                    <div>
                        <SfButton CssClass="bt-container" IsPrimary="true">Start</SfButton>
                    </div>*@




                <EditForm EditContext="@editContext">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <StrategiesDropDownList />
                        <SymbolsDropDownList />
                        <SfTextBox Placeholder="Start balance" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                        <SfTextBox Placeholder="Test Property" FloatLabelType='@FloatLabelType.Auto' @bind-Value="model.TestProperty" CssClass="@cssClass" Blur="TestPropertyBlurEvent"></SfTextBox>
                        <ValidationMessage For="() => model.TestProperty" />
                    </div>
                    <SfButton IsPrimary="true" HtmlAttributes="@(new Dictionary<string, object> { { "type", "submit" } })">Save</SfButton>
                </EditForm>



            </div>
        </div>
    </div>

</div>

@code
{
    private void click()
    {
        cssClass = "cssclasschag";
    }
    private Test model;
    private EditContext editContext;
    private string cssClass { get; set; }
    protected override void OnInitialized()
    {
        model = new Test();
        editContext = new EditContext(model);
    }
    public class Test
    {
        [Required]
        public string TestProperty { get; set; }
    }
    public void TestPropertyBlurEvent(FocusOutEventArgs args)
    {
        if (!editContext.Validate())
        {
            cssClass = "e-error";
        }
        else
        {
            cssClass = "e-success";
        }
        StateHasChanged();
    }
}
